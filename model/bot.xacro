<?xml version='1.0'?>

<robot name="bot" 
  xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="robotname" value="bot"/>
  <xacro:property name="set_gazebo_plugins" value="1"/>

  <xacro:macro name="default_origin">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:macro>

<!-- BASE_LINK PARAMETERS -->
  <xacro:property name="bot_mass" value="300.0"/>
  <xacro:property name="bot_width" value="0.75"/>
  <xacro:property name="bot_height" value="0.5"/>
  <xacro:property name="distance_between_wheels" value="0.6"/>
  <xacro:property name="wheel_diameter" value="0.1" />
  <xacro:property name="below_offset_btwn_base_wheel" value="0.02"/>
  <xacro:property name="wheel_thickness" value="0.02"/>
  <xacro:property name="wheel_mass" value="0.2"/> 


  <xacro:macro name="base_geometry">
    <geometry>
      <box size="${bot_width} ${bot_width} ${bot_height}"/>
    </geometry>
  </xacro:macro>
  
  <xacro:macro name="default_inertia">
    <inertia ixx="4" ixy="0" ixz="0" iyy="4" iyz="0" izz="2"/>
  </xacro:macro>


<!-- WHEEL PARAMETERS -->
  <xacro:macro name="wheel_inertia">
      <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
  </xacro:macro>

  <xacro:macro name="wheel_geometry_common">
      <geometry>
          <cylinder radius="${wheel_diameter/2}" length="${wheel_thickness}"/>
      </geometry>
  </xacro:macro>

  <xacro:macro name="wheel_orientation_x">
    <origin xyz="0 0 0" rpy="0 ${pi/2} ${pi/2}"/>
  </xacro:macro>

  <xacro:macro name="wheel_orientation_y">
    <origin xyz="0 0 0" rpy="0 ${pi/2} 0"/>
  </xacro:macro>

  <xacro:macro name="joint_axis_x">
    <axis xyz="0 1 0" rpy="0 0 0" />
  </xacro:macro>
  <xacro:macro name="joint_axis_y">
    <axis xyz="1 0 0" rpy="0 0 0" />
  </xacro:macro>
  <!-- origin_wheel - location of where the wheel is attached
        wheel_orientation - the direction (axis) of where the wheel is turned straight to
        joint_orientation - the axis in which direction the joint rotates the wheel straight to
        e.g. - wheel's axis is y - so it rotates in the way so robot goes straight in x axis.
        so wheel_orientation is x, joint_orientation is x 
        joint_origin - the location of where the slider joint is attached (should be at the very edge of the bottom
        of the base_link-->
  <xacro:macro name="wheel" params="name *wheel_orientation *joint_orientation *joint_origin">
    <link name="btwn_base_and_${name}wheel">
      <inertial>
        <mass value="${wheel_mass/3}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.1" ixy="0.0" ixz="0.0" iyy="0.1" iyz="0.0" izz="0.1"/>
      </inertial>
    </link>
    <joint name="${name}_base_joint" type="prismatic">
        <parent link="base_link"/>
        <child link="btwn_base_and_${name}wheel"/>
        <limit effort="100.0" lower="${-below_offset_btwn_base_wheel}" upper="${wheel_diameter}" velocity="100"/>
        <xacro:insert_block name="joint_origin"/>
        <axis xyz="0 0 1" rpy="0 0 0" />
        <dynamics damping="0.7" friction="100000"/>
        <safety_controller soft_lower_limit="-0.01"  soft_upper_limit="0.09" k_position="1" k_velocity="1"/>
      </joint>
    <link name="${name}_wheel">
        <visual>
          <material name="black">
            <color rgba="0 0 0 1"/>
          </material>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
        </visual>
        <collision>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
        </collision>
        <inertial>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
          <mass value="${wheel_mass}"/>
          <xacro:wheel_inertia/>
        </inertial>
    </link>
    
    <joint name="${name}_wheel_joint" type="continuous">
        <xacro:insert_block name="joint_orientation"/>
        <parent link="btwn_base_and_${name}wheel"/>
        <child link="${name}_wheel"/>
        <!--xacro:insert_block name="origin_wheel"/-->
        <!-- commented because origin of the wheels should be aligned with origin of the sliders -->
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    
    
      <!-- GAZEBO settings for wheels -->
    <gazebo reference="${name}_wheel">
      <mu1>1000000.0</mu1>
      <mu2>1000000.0</mu2>
      <minDepth>0.0001 </minDepth>
      <fdir1 value = "1 1 0"/>
      <kp>100000.0</kp>
      <kd>100000 </kd>
      <material>Gazebo/Black</material>
      <selfCollide>0</selfCollide>
      <gravity>0</gravity>
    </gazebo>

    <gazebo reference="btwn_base_and_${name}wheel">
        <mu1>1000000.0</mu1>
        <mu2>1000000.0</mu2>
        <minDepth>0.0001 </minDepth>
        <fdir1 value = "1 0 0"/>
        <kp>100000.0</kp>
        <kd>100000 </kd>
        <material>Gazebo/Black</material>
        <selfCollide>0</selfCollide>
        <gravity>0</gravity>
    </gazebo>
  </xacro:macro>


<!-- DEFINITIONS OF ROBOT -->
  <!-- BASE LINK -->
  <link name='base_link'>
    <pose>0 0 0 0 0 0</pose>

    <inertial>
      <mass value="${bot_mass}"/>
      <xacro:default_inertia/>
      <xacro:base_geometry/>
    </inertial>

    <collision name='collision'>
      <xacro:default_origin/>
      <xacro:base_geometry/>
    </collision>

    <visual name='visual'>
       <xacro:default_origin/>
       <xacro:base_geometry/>
    </visual>
  </link>

  <!-- WHEELS -->
  
   <xacro:wheel name="1y">
    <xacro:wheel_orientation_y/>
    <xacro:joint_axis_y/>
    <origin xyz="${bot_width/2} ${-distance_between_wheels/2} ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>

  <xacro:wheel name="2y">
      <xacro:wheel_orientation_y/>
      <xacro:joint_axis_y/>
    <origin xyz="${bot_width/2} ${distance_between_wheels/2} ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="3y">
      <xacro:wheel_orientation_y/>
      <xacro:joint_axis_y/>
    <origin xyz="${-bot_width/2} ${-distance_between_wheels/2} ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="4y">
      <xacro:wheel_orientation_y/>
      <xacro:joint_axis_y/>
    <origin xyz="${-bot_width/2} ${distance_between_wheels/2} ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="5x">
    <xacro:wheel_orientation_x/>
    <xacro:joint_axis_x/>
    <origin xyz="${distance_between_wheels/2} ${bot_width/2 } ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="6x">
      <xacro:wheel_orientation_x/>
      <xacro:joint_axis_x/>
    <origin xyz="${-distance_between_wheels/2} ${bot_width/2 } ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="7x">
      <xacro:wheel_orientation_x/>
      <xacro:joint_axis_x/>
    <origin xyz="${distance_between_wheels/2} ${-bot_width/2 } ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>
  <xacro:wheel name="8x">
      <xacro:wheel_orientation_x/>
      <xacro:joint_axis_x/>
    <origin xyz="${-distance_between_wheels/2} ${-bot_width/2 } ${-bot_height/2}" rpy="0 0 0"/>
  </xacro:wheel>




  <gazebo reference="base_link">
      <mu1>1000000.0</mu1>
      <mu2>1000000.0</mu2>
      <minDepth>0.0001 </minDepth>
      <fdir1 value = "1 0 0"/>
      <kp>100000.0</kp>
      <kd>100000 </kd>
      <material>Gazebo/Black</material>
      <selfCollide>false</selfCollide>
      <gravity>true</gravity>
  </gazebo>


  <!-- LIDAR -->

  <!-- <joint name="lidar_joint" type="fixed">
    <axis xyz="0 0 0" />
    <origin xyz="${bot_length*6/7} 0 ${bot_height}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="lidar"/>
  </joint>

  <link name="lidar">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.03 0.03 0.03"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.03 0.03 0.03"/>      
      </geometry>
    </visual>
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>  -->
  <!-- GAZEBO PLUGINS -->
  <!-- <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <publishTf>1</publishTf>
      <updateRate>50</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.2</wheelSeparation>
      <wheelDiameter>0.05</wheelDiameter>
      <torque>75</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <odometrySource>world</odometrySource>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo> -->

  <!-- <gazebo reference="lidar">
    <sensor type="ray" name="head_hokuyo_sensor_front">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.3</min_angle>
            <max_angle>1.3</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.1</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>scan</topicName>
        <frameName>lidar</frameName>
      </plugin>
    </sensor>
  </gazebo> -->
</robot>