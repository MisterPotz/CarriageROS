<?xml version='1.0'?>

<robot name="bot" 
  xmlns:xacro="http://www.ros.org/wiki/xacro">
  <xacro:property name="robotname" value="bot"/>
  <xacro:property name="set_gazebo_plugins" value="1"/>

  <xacro:macro name="default_origin">
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </xacro:macro>

<!-- BASE_LINK PARAMETERS -->
  <xacro:property name="bot_mass" value="30.0"/>
  <xacro:property name="bot_width" value="0.75"/>
  <xacro:property name="bot_height" value="0.5"/>
  <xacro:property name="distance_between_wheels" value="0.5"/>
  <xacro:property name="wheel_diameter" value="0.12" />
  <xacro:property name="below_offset_btwn_base_wheel" value="0.02"/>
  <xacro:property name="wheel_thickness" value="0.03"/>
  <xacro:property name="wheel_mass" value="0.3"/> 


  <xacro:macro name="base_geometry">
    <geometry>
      <box size="${bot_width} ${bot_width} ${bot_height}"/>
    </geometry>
  </xacro:macro>
  
  

  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
      iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
      izz="${m*r*r/2}"
    />
  </macro>

 <macro name="box_inertia" params="m x y z">
    <inertia  ixx="${m*(y*y+z*z)/12}" ixy = "0" ixz = "0"
      iyy="${m*(x*x+z*z)/12}" iyz = "0"
      izz="${m*(x*x+z*z)/12}"
    />
  </macro>

  <xacro:macro name="default_inertia">
    <box_inertia m="${bot_mass}" x="${bot_width}" y="${bot_width}" z="${bot_height}"/>
  </xacro:macro>


<!-- WHEEL PARAMETERS -->
  <xacro:macro name="wheel_inertia">
    <cylinder_inertia m="${wheel_mass}" r="${wheel_diameter/2}" h="${0.01}"/>
  </xacro:macro>

  <xacro:macro name="wheel_geometry_common">
      <geometry>
          <cylinder radius="${wheel_diameter/2}" length="${wheel_thickness/3}"/>
      </geometry>
  </xacro:macro>
  <xacro:macro name="wheel_smooth_geometry">
      <geometry>
          <mesh filename="file://$(arg meshDirectory)/mesh/wheel_smooth.stl" scale="0.01 0.01 0.01"/>
      </geometry>
  </xacro:macro>
  
  <xacro:macro name="wheel_orientation_x">
    <origin xyz="0 0 0" rpy="0 ${pi/2} ${pi/2}"/>
  </xacro:macro>

  <xacro:macro name="wheel_orientation_y">
    <origin xyz="0 0 0" rpy="0 ${pi/2} ${pi}"/>
  </xacro:macro>
  <xacro:macro name="wheel_smooth_orientation_x">
    <origin xyz="0 0 0" rpy="${pi/2} ${pi/2} ${pi/2}"/>
  </xacro:macro>

  <xacro:macro name="wheel_smooth_orientation_y">
    <origin xyz="0 0 0" rpy="${pi/2} ${pi/2} 0"/>
  </xacro:macro>

  <xacro:macro name="joint_axis_x">
    <axis xyz="0 1 0" rpy="0 0 0" />
  </xacro:macro>
  <xacro:macro name="joint_axis_y">
    <axis xyz="-1 0 0" rpy="0 0 0" />
  </xacro:macro>
  <!-- friction is high so these wheels are drivers -->
  <xacro:macro name="primary_wheel_physical_params" params="wheel_name">
    <gazebo reference="${wheel_name}_wheel">
        <mu1>100000.0</mu1>
        <mu2>100000.0</mu2>
        <fdir1 value = "0 0 0"/>
        <kp>1e+13</kp>
        <kd>1000</kd>
        <material>Gazebo/Black</material>
        <minDepth>0.0001 </minDepth>
      </gazebo>
  </xacro:macro>
  <!-- friction is low so these wheels are casters -->
  <xacro:macro name="secondary_wheel_physical_params" params="wheel_name">
    <gazebo reference="${wheel_name}_wheel">
        <material>Gazebo/Black</material>
        <kp>1e+13</kp>
        <kd>1000</kd>
        <mu1>0.00</mu1>
        <mu2>0.00</mu2>
        <fdir1 value = "0 0 0"/>
        <minDepth>0.0001 </minDepth>
      </gazebo>
  </xacro:macro>

  <!-- origin_wheel - location of where the wheel is attached
        wheel_orientation - the direction (axis) of where the wheel is turned straight to
        joint_orientation - the axis in which direction the joint rotates the wheel straight to
        e.g. - wheel's axis is y - so it rotates in the way so robot goes straight in x axis.
        so wheel_orientation is x, joint_orientation is x 
        joint_origin - the location of where the slider joint is attached (should be at the very edge of the bottom
        of the base_link
      -->
  <xacro:macro name="wheel" params="name *wheel_orientation *joint_orientation *joint_origin *wheel_physical_params *wheel_smooth_orientation"> 
    <link name="btwn_base_and_${name}wheel">
      <inertial>
        <mass value="${wheel_mass/10}" />
        <origin xyz="0 0 0" />
        <inertia ixx="0.01" ixy="0.0" ixz="0.0" iyy="0.01" iyz="0.0" izz="0.01"/>
      </inertial>
      <visual>
        <geometry>
          <cylinder radius="0.01" length="0.01"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>  
      </visual>
      <collision>
        <geometry>
          <cylinder radius="0.01" length="0.01"/>
        </geometry>
        <origin xyz="0 0 0" rpy="0 0 0"/>  
      </collision>
    </link>
    <joint name="${name}_base_joint" type="prismatic">
        <parent link="base_link"/>
        <child link="btwn_base_and_${name}wheel"/>
        <!-- <child link="${name}_wheel"/> -->
        <limit effort="200.0" lower="${-below_offset_btwn_base_wheel-wheel_diameter}" upper="0.01" velocity="0.5"/>
        <xacro:insert_block name="joint_origin"/>
        <axis xyz="0 0 1" rpy="0 0 0" />
        <!-- little damping reduces some oscillations a bit -->
        <dynamics damping="0.05"/> 
        <!-- lower and upper limits should be slightly less than those mentioned in <joint> tag
            k_velocity should be small - less oscillations, k_position can be a bit higher but it influences
            more on speed of joint moving than on oscillations -->
        <safety_controller soft_lower_limit="-0.8" soft_upper_limit="0.1"  k_velocity="0.001" k_position="0.2"/>
      </joint>
    <link name="${name}_wheel">
        <visual>
          <material name="black">
            <color rgba="0 0 0 1"/>
          </material>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
        </visual>
        <collision>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
        </collision>
        <inertial>
          <xacro:wheel_geometry_common/>
          <xacro:insert_block name="wheel_orientation"/>
          <mass value="${wheel_mass/2}"/>
          <xacro:wheel_inertia/>
        </inertial>
    </link>
    
    <joint name="${name}_wheel_joint" type="continuous">
        <xacro:insert_block name="joint_orientation"/>
        <parent link="btwn_base_and_${name}wheel"/>
        <child link="${name}_wheel"/>
        <origin xyz="0 0 0" rpy="0 0 0"/>
  
    </joint>
    <link name="${name}_wheel_smooth">
      <visual>
        <material name="cyan">
          <color rgba="0 255 255 1"/>
        </material>
        <xacro:wheel_smooth_geometry/>
        <xacro:insert_block name="wheel_smooth_orientation"/>
      </visual>
      <collision>
        <xacro:wheel_smooth_geometry/>
        <xacro:insert_block name="wheel_smooth_orientation"/>
      </collision>
      <inertial>
        <xacro:wheel_smooth_geometry/>
        <xacro:insert_block name="wheel_smooth_orientation"/>
        <mass value="${wheel_mass}"/>
        <xacro:wheel_inertia/>
      </inertial>
  </link>
  <joint name="${name}_wheel__wheel_smooth" type="revolute" >
    <limit upper="0.0" lower="0.0" effort="1000.0" velocity="0.0"/>
    <parent link="${name}_wheel"/>
    <child link="${name}_wheel_smooth"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>
    
      <!-- GAZEBO settings for wheels -->
      <!-- on each side of the robot should be 2 driver wheels and 2 non-driver caster wheels so they don't conflict -->
    <xacro:insert_block name="wheel_physical_params"/>

    <gazebo reference="btwn_base_and_${name}wheel">
        <mu1>100.0</mu1>
        <mu2>100.0</mu2>
        <minDepth>0.0001 </minDepth>
        <fdir1 value = "1 0 0"/>
        <kp>100000.0</kp>
        <kd>1000 </kd>
        <material>Gazebo/Black</material>
        <selfCollide>0</selfCollide>
        <gravity>0</gravity>
    </gazebo>
    <gazebo reference="${name}_wheel_smooth">
        <material>Gazebo/Blue</material>
        <mu1>0.0</mu1>
        <mu2>0.0</mu2>
        <minDepth>0.0000 </minDepth>
        <fdir1 value = "0 0 0"/>
        <kp>100000.0</kp>
        <kd>1000 </kd>
        <selfCollide>0</selfCollide>
        <gravity>1</gravity>
      </gazebo>

    <!-- TRANSMISSION REQUIRED FOR PRISMATIC JOINTS TO WORK WITH PLUGINS -->
    <transmission name="${name}_transmission">
      <type>transmission_interface/SimpleTransmission</type>
      <robotNamespace>/bot</robotNamespace>
      <joint name="${name}_base_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>  
      <actuator name="${name}_lift_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>
  </xacro:macro>


<!-- DEFINITIONS OF ROBOT -->
  <!-- BASE LINK -->
  <link name='base_link'>
    <pose>0 0 0 0 0 0</pose>

    <inertial>
      <mass value="${bot_mass}"/>
      <xacro:default_inertia/>
      <xacro:base_geometry/>
    </inertial>

    <collision name='collision'>
      <xacro:default_origin/>
      <xacro:base_geometry/>
    </collision>

    <visual name='visual'>
       <xacro:default_origin/>
       <xacro:base_geometry/>
    </visual>
  </link>

  <!-- WHEELS -->

   <xacro:wheel name="1y">
    <xacro:wheel_orientation_y/>
    <xacro:joint_axis_y/>
    <origin xyz="${bot_width/2} ${-distance_between_wheels/2} ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:primary_wheel_physical_params wheel_name="1y"/>
    <xacro:wheel_smooth_orientation_y/>
  </xacro:wheel>
  <xacro:wheel name="2y">
    <xacro:wheel_orientation_y/>
    <xacro:joint_axis_y/>
    <origin xyz="${bot_width/2} ${distance_between_wheels/2} ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:secondary_wheel_physical_params wheel_name="2y"/>
    <xacro:wheel_smooth_orientation_y/>
  </xacro:wheel>
  <xacro:wheel name="3y">
    <xacro:wheel_orientation_y/>
    <xacro:joint_axis_y/>
    <origin xyz="${-bot_width/2} ${-distance_between_wheels/2} ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:primary_wheel_physical_params wheel_name="3y"/>
    <xacro:wheel_smooth_orientation_y/>
  </xacro:wheel>
  <xacro:wheel name="4y">
    <xacro:wheel_orientation_y/>
    <xacro:joint_axis_y/>
    <origin xyz="${-bot_width/2} ${distance_between_wheels/2} ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>  
    <xacro:secondary_wheel_physical_params wheel_name="4y"/>
    <xacro:wheel_smooth_orientation_y/>
  </xacro:wheel>
  <xacro:wheel name="5x">
    <xacro:wheel_orientation_x/>
    <xacro:joint_axis_x/>
    <origin xyz="${distance_between_wheels/2} ${bot_width/2 } ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:primary_wheel_physical_params wheel_name="5x"/>
    <xacro:wheel_smooth_orientation_x/>
  </xacro:wheel>
  <xacro:wheel name="6x">
    <xacro:wheel_orientation_x/>
    <xacro:joint_axis_x/>
    <origin xyz="${-distance_between_wheels/2} ${bot_width/2 } ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:secondary_wheel_physical_params wheel_name="6x"/>
    <xacro:wheel_smooth_orientation_x/>
  </xacro:wheel>
  <xacro:wheel name="7x">
    <xacro:wheel_orientation_x/>
    <xacro:joint_axis_x/>
    <origin xyz="${distance_between_wheels/2} ${-bot_width/2 } ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:primary_wheel_physical_params wheel_name="7x"/>
    <xacro:wheel_smooth_orientation_x/>
  </xacro:wheel>
  <xacro:wheel name="8x">
    <xacro:wheel_orientation_x/>
    <xacro:joint_axis_x/>
    <origin xyz="${-distance_between_wheels/2} ${-bot_width/2 } ${-bot_height/2+wheel_diameter/3*2}" rpy="0 0 0"/>
    <xacro:secondary_wheel_physical_params wheel_name="8x"/>
    <xacro:wheel_smooth_orientation_x/>
  </xacro:wheel>

  <gazebo reference="base_link">
      <mu1>1000000.0</mu1>
      <mu2>1000000.0</mu2>
      <minDepth>0.0001 </minDepth>
      <fdir1 value = "1 0 0"/>
      <kp>10000.0</kp>
      <kd>10000 </kd>
      <material>Gazebo/Black</material>
      <selfCollide>false</selfCollide>
      <gravity>true</gravity>
  </gazebo>

  <!-- should be turned on because we are using some interfaces to control joints -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/bot</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  
  
  <!-- GAZEBO PLUGINS -->
  <!-- setup of 4 driver primary wheels -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <publishTf>1</publishTf>
      <updateRate>100</updateRate>
      <leftJoint>3y_wheel_joint</leftJoint>
      <rightJoint>1y_wheel_joint</rightJoint>
      <wheelSeparation>0.75</wheelSeparation>
      <angular>
        <z>
          <has_velocity_limits>true</has_velocity_limits>
          <max_velocity>0</max_velocity>
          <has_acceleration_limits>true</has_acceleration_limits>
          <max_acceleration>0</max_acceleration>
          <has_jerk_limits>true</has_jerk_limits>
          <max_jerk>0</max_jerk>
        </z>
      </angular>
      <wheelDiameter>0.12</wheelDiameter>
      <torque>300</torque>
      <commandTopic>cmd_vel_y</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <odometrySource>world</odometrySource>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin name="differential_drive_controller_2" filename="libgazebo_ros_diff_drive.so">
      <alwaysOn>true</alwaysOn>
      <publishTf>1</publishTf>
      <updateRate>100</updateRate>
      <leftJoint>5x_wheel_joint</leftJoint>
      <rightJoint>7x_wheel_joint</rightJoint>
      <wheelSeparation>0.75</wheelSeparation>
      <angular>
        <z>
          <has_velocity_limits>true</has_velocity_limits>
          <max_velocity>0</max_velocity>
          <has_acceleration_limits>true</has_acceleration_limits>
          <max_acceleration>0</max_acceleration>
          <has_jerk_limits>true</has_jerk_limits>
          <max_jerk>0</max_jerk>
        </z>
      </angular>
      <wheelDiameter>0.12</wheelDiameter>
      <torque>500</torque>
      <commandTopic>cmd_vel_x</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <odometrySource>world</odometrySource>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
    </plugin>
  </gazebo>

</robot>